definitions:
  models.BadRequestError:
    properties:
      error:
        example: Invalid request payload
        type: string
    type: object
  models.InternalServerError:
    properties:
      error:
        example: Failed to create item
        type: string
    type: object
  models.Item:
    properties:
      created_at:
        example: "2025-02-25T12:37:32Z"
        type: string
      description:
        example: A fashionable T-shirt with IITU logo.
        type: string
      id:
        example: 1
        type: integer
      name:
        example: T-shirt
        maxLength: 40
        minLength: 5
        type: string
      price:
        example: 100
        maximum: 1000
        minimum: 100
        type: integer
      updated_at:
        example: "2025-02-25T12:37:32Z"
        type: string
    required:
    - name
    - price
    type: object
  models.RequestCreateItem:
    properties:
      description:
        example: A fashionable T-shirt with IITU logo.
        type: string
      name:
        example: T-shirt
        maxLength: 40
        minLength: 5
        type: string
      price:
        example: 100
        maximum: 1000
        minimum: 100
        type: integer
    required:
    - name
    - price
    type: object
  models.RequestCreateUser:
    properties:
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        maxLength: 30
        minLength: 2
        type: string
      last_name:
        example: Doe
        maxLength: 30
        minLength: 2
        type: string
      password_hash:
        example: secret12345
        minLength: 8
        type: string
      phone_number:
        example: "+12345678901"
        type: string
    required:
    - email
    - first_name
    - last_name
    - password_hash
    type: object
  models.RequestUpdateItem:
    properties:
      description:
        example: A fashionable T-shirt with IITU logo.
        type: string
      id:
        example: 1
        type: integer
      name:
        example: T-shirt
        maxLength: 40
        minLength: 5
        type: string
      price:
        example: 100
        maximum: 1000
        minimum: 100
        type: integer
    required:
    - name
    - price
    type: object
  models.RequestUpdateUser:
    properties:
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        maxLength: 30
        minLength: 2
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: Doe
        maxLength: 30
        minLength: 2
        type: string
      password_hash:
        example: newSecret123
        minLength: 8
        type: string
      phone_number:
        example: "+12345678901"
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  models.User:
    properties:
      created_at:
        example: "2025-02-25T12:37:32Z"
        type: string
      email:
        example: john.doe@example.com
        type: string
      first_name:
        example: John
        maxLength: 30
        minLength: 2
        type: string
      id:
        example: 1
        type: integer
      last_name:
        example: Doe
        maxLength: 30
        minLength: 2
        type: string
      password_hash:
        example: $2a$10$EKq8Yv9Y1WnrDFEdiMYCSOaz/oq2I9l9ngJyH/eBRM3lIbcJRLS02
        minLength: 8
        type: string
      phone_number:
        example: "+12345678901"
        type: string
      updated_at:
        example: "2025-02-25T12:37:32Z"
        type: string
    required:
    - email
    - first_name
    - last_name
    - password_hash
    type: object
info:
  contact: {}
paths:
  /item:
    get:
      consumes:
      - application/json
      description: Get an item with the specified ID
      parameters:
      - description: Item ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item retrieved successfully
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Get item by id
      tags:
      - Items
  /item/create:
    post:
      consumes:
      - application/json
      description: Create a new item with the given payload
      parameters:
      - description: Item to create
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.RequestCreateItem'
      produces:
      - application/json
      responses:
        "201":
          description: Item created
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Create a new item
      tags:
      - Items
  /item/delete:
    delete:
      consumes:
      - application/json
      description: Delete an item with the specified ID
      parameters:
      - description: Item ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item deleted successfully
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Delete item
      tags:
      - Items
  /item/update:
    put:
      consumes:
      - application/json
      description: Update an existing item with the given payload
      parameters:
      - description: Item to update
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.RequestUpdateItem'
      produces:
      - application/json
      responses:
        "200":
          description: Item udpated successfully
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Update item
      tags:
      - Items
  /items:
    get:
      description: Retrieve a list of all items
      produces:
      - application/json
      responses:
        "200":
          description: A list of items retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Get all items
      tags:
      - Items
  /user:
    get:
      consumes:
      - application/json
      description: Get a user with the specified ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User retrieved successfully
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Get user by id
      tags:
      - Users
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the given payload
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RequestCreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/models.RequestCreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Create a new user
      tags:
      - Users
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Delete a user with the specified ID
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Delete user
      tags:
      - Users
  /user/update:
    put:
      consumes:
      - application/json
      description: Update an existing user with the given payload
      parameters:
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RequestUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: User udpated successfully
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Update user
      tags:
      - Users
  /users:
    get:
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: A list of users retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.BadRequestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.InternalServerError'
      summary: Get all users
      tags:
      - Users
swagger: "2.0"
