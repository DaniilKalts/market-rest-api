openapi: 3.0.0
info:
  title: Market REST API
  description: A REST API for managing market items and user accounts.
  version: "1.0.0"
paths:
  /items:
    post:
      tags:
        - Items
      summary: CreateItem
      description: Create a new item.
      security:
        - bearerAuth: []
      requestBody:
        description: Item to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "T-shirt"
                  minLength: 5
                  maxLength: 40
                description:
                  type: string
                  example: "A fashionable T-shirt with IITU logo."
                price:
                  type: integer
                  example: 100
                  minimum: 100
                  maximum: 1000
              required:
                - name
                - price
      responses:
        "201":
          description: Item created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags:
        - Items
      summary: GetAllItems
      description: Retrieve a list of all items.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of items retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /items/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the item.
        schema:
          type: integer
    get:
      tags:
        - Items
      summary: GetItemByID
      description: Get an item by its ID.
      responses:
        "200":
          description: Item retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Items
      summary: UpdateItem
      description: Update an existing item.
      security:
        - bearerAuth: []
      requestBody:
        description: Updated item payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "T-shirt"
                  minLength: 5
                  maxLength: 40
                description:
                  type: string
                  example: "A fashionable T-shirt with IITU logo."
                price:
                  type: integer
                  example: 100
                  minimum: 100
                  maximum: 1000
              required:
                - name
                - price
      responses:
        "200":
          description: Item updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Items
      summary: DeleteItem
      description: Delete an item by its ID.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Item deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users:
    post:
      tags:
        - Users
      summary: CreateUser
      description: Create a new user.
      security:
        - bearerAuth: []
      requestBody:
        description: User to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "John"
                  minLength: 2
                  maxLength: 30
                last_name:
                  type: string
                  example: "Doe"
                  minLength: 2
                  maxLength: 30
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "secret12345"
                  minLength: 8
                phone_number:
                  type: string
                  example: "+12345678901"
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        "201":
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - Users
      summary: GetAllUsers
      description: Retrieve a list of all users.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of users retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the user.
        schema:
          type: integer
    get:
      tags:
        - Users
      summary: GetUserByID
      description: Get a user by their ID.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Users
      summary: UpdateUser
      description: Update an existing user.
      security:
        - bearerAuth: []
      requestBody:
        description: Updated user payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "John"
                  minLength: 2
                  maxLength: 30
                last_name:
                  type: string
                  example: "Doe"
                  minLength: 2
                  maxLength: 30
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "newSecret123"
                  minLength: 8
                phone_number:
                  type: string
                  example: "+12345678901"
              required:
                - first_name
                - last_name
                - email
      responses:
        "200":
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Users
      summary: DeleteUser
      description: Delete a user by their ID.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User deleted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/register:
    post:
      tags:
        - Authentication
      summary: RegisterUser
      description: Register a new user.
      requestBody:
        description: User registration payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "John"
                  minLength: 2
                  maxLength: 30
                last_name:
                  type: string
                  example: "Doe"
                  minLength: 2
                  maxLength: 30
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "secret12345"
                  minLength: 8
                confirm_password:
                  type: string
                  example: "secret12345"
                  minLength: 8
                phone_number:
                  type: string
                  example: "+12345678901"
              required:
                - first_name
                - last_name
                - email
                - password
                - confirm_password
      responses:
        "201":
          description: User registered successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    post:
      tags:
        - Authentication
      summary: AuthenticateUser
      description: Authenticate user using email and password.
      requestBody:
        description: User authentication payload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe@example.com"
                password:
                  type: string
                  example: "secret12345"
              required:
                - email
                - password
      responses:
        "200":
          description: User authenticated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid credentials or Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      description: Log out a user with the given userID.
      parameters:
        - name: userID
          in: query
          required: true
          description: User ID to log out.
          schema:
            type: integer
      responses:
        "200":
          description: User logged out successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request payload"
    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "T-shirt"
          minLength: 5
          maxLength: 40
        description:
          type: string
          example: "A fashionable T-shirt with IITU logo."
        price:
          type: integer
          example: 100
          minimum: 100
          maximum: 1000
        created_at:
          type: string
          example: "2025-02-25T12:37:32Z"
        updated_at:
          type: string
          example: "2025-02-25T12:37:32Z"
      required:
        - name
        - price
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: "John"
          minLength: 2
          maxLength: 30
        last_name:
          type: string
          example: "Doe"
          minLength: 2
          maxLength: 30
        email:
          type: string
          example: "john.doe@example.com"
        password:
          type: string
          example: "$2a$10$EKq8Yv9Y1WnrDFEdiMYCSOaz/oq2I9l9ngJyH/eBRM3lIbcJRLS02"
          minLength: 8
        phone_number:
          type: string
          example: "+12345678901"
        created_at:
          type: string
          example: "2025-02-25T12:37:32Z"
        updated_at:
          type: string
          example: "2025-02-25T12:37:32Z"
      required:
        - first_name
        - last_name
        - email
        - password
